/** @format */

// Box-rounded-right mixin
@mixin box-rounded-right($radius: 16px) {
  border-radius: 0;
  border-top-right-radius: $radius;
  border-bottom-right-radius: $radius;
}

@mixin box-rounded-top($radius: 16px) {
  border-radius: 0;
  border-top-right-radius: $radius;
  border-top-left-radius: $radius;
}

// Transition utility mixin
@mixin transition($properties, $duration: 0.2s, $timing: ease) {
  transition: $properties $duration $timing;
}

// Flexbox utility mixin
@mixin flex($direction: row, $align: center, $justify: flex-start) {
  display: flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
}

// Collapsed state utility mixin
@mixin collapsed-state() {
  width: 0;
  opacity: 0;
  transform: scale(0);
  height: 0;
  overflow: hidden;
  white-space: nowrap;
}

// Absolute position mixin
@mixin absolute-position() {
  position: absolute;
  top: 0;
  left: 0;
}

/*

MEDIA QUERY MANAGER

0 - 600px:        Phone
600 - 900px:      Tablet portrait
900 - 1200px:     Tablet landscape
[1200 - 1800]     Normal styles apply
1800px + :        Big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

*/
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {
      @content;
    } //600px
  }

  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) {
      @content;
    } //900px
  }

  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) {
      @content;
    } //1200px
  }

  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) {
      @content;
    } //1800
  }
}
