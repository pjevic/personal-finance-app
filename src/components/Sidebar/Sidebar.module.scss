/** @format */

@use "../../styles/abstracts/variables.scss" as variables;
@use "../../styles/abstracts/mixins.scss" as mix;

.sidebar {
  background-color: variables.$color-gray-900;
  flex: 0 0 30rem;
  height: 100dvh;
  @include mix.box-rounded-right(1.6rem);
  @include mix.transition(width, 0.3s, ease);

  @include mix.flex(column, null, null);

  nav {
    flex-grow: 1;
    @include mix.flex(column, _, space-between);

    ul {
      li {
        @include mix.flex(row, center, _);

        &:not(:last-child) {
          margin-bottom: 4px;
        }

        a {
          color: variables.$color-gray-300;
          text-decoration: none;
          width: 100%;
          padding: 2rem 0;
          margin-right: 3.2rem;
          @include mix.box-rounded-right(1.6rem);
          @include mix.transition(all, 0.2s, ease);

          position: relative;
          @include mix.flex(row, center, _);

          .line {
            @include mix.absolute-position();
            width: 4px;
            height: 100%;
            background-color: transparent;
            @include mix.transition(background-color, 0.2s, ease);
          }

          .icon {
            width: 2.4rem;
            height: 2.4rem;
            margin: 0 2rem 0 3rem;
          }

          .label {
            text-decoration: none;
            white-space: nowrap;
            @include mix.transition(all, 0.2s, ease);
          }

          &.active {
            background-color: variables.$color-gray-100;

            .line {
              background-color: variables.$color-secondary-green;
            }

            .icon {
              fill: variables.$color-secondary-green;
            }

            .label {
              color: variables.$color-gray-900;
            }
          }
        }
      }
    }

    button {
      color: variables.$color-gray-300;
      margin-bottom: 5.8rem;
      @include mix.transition(all, 0.2s, ease);

      @include mix.flex(row, center, null);

      svg {
        width: 2.4rem;
        height: 2.4rem;
        margin: 0 2rem 0 3rem;
      }

      span {
        text-decoration: none;
        white-space: nowrap;
        overflow: hidden;
        @include mix.transition(all, 0.2s, ease);

        display: block;

        &.collapsed {
          @include mix.collapsed-state();
        }

        &:not(.collapsed) {
          width: auto;
          opacity: 1;
          transform: scale(1);
        }
      }
    }
  }

  &.collapsed {
    width: 8.8rem;

    nav {
      ul {
        li {
          a {
            .label {
              @include mix.collapsed-state();
            }
          }
        }
      }

      button {
        svg {
          transform: rotate(180deg);
        }
      }
    }
  }

  @include mix.respond(tab-port) {
    width: 100%;
    flex: 0 0 7.4rem;

    border-radius: 0;

    nav {
      ul {
        padding-top: 1rem;

        // @include mix.flex(row, null, space-around);

        gap: 1rem;

        display: flex;
        justify-content: space-evenly;

        li {
          &:not(:last-child) {
            margin-bottom: 0px;
          }

          a {
            @include mix.flex(column, null, space-between);
            @include mix.box-rounded-top(1rem);
            margin-right: 0rem;
            position: relative;

            height: 6.6rem;
            width: 10.4rem;
            padding: 1rem;

            .icon {
              order: 1;
              margin: 0;
            }

            .label {
              order: 2;
              @include mix.textPreset(5, true);
            }

            .line {
              position: absolute;
              top: 6.2rem;
              left: 0px;
              height: 4px;
              width: 100%;
            }
          }
        }
      }

      button {
        display: none;
      }
    }
  }
}
